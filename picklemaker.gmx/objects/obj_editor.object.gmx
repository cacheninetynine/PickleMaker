<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initiazlie
if room != rm_editor
{
    instance_destroy()
}
if (instance_number(obj_editor) &gt; 1) {instance_destroy()}
window_set_caption("PickleMaker v"+GM_version)
mstartx = 0
mstarty = 0
maxobj = 2048
sx = 1 // obj x
sy = 1 // obj y
so = 0 // selected obj index
selected = noone
selx = 0
sely = 0
objlist[0] = obj_solid
objlist[1] = obj_tickleablesolid
objlist[2] = obj_player
objlist[3] = obj_baddie
objlist[4] = obj_collect
objlist[5] = obj_onewaywall
objlist[6] = obj_slope
globalvar levelname;
globalvar levelauthor;
levelname = "level"
levelauthor = "unknown"
room_width = 1280
room_height = 960
draw_set_font(font_editor)
draw_set_color(c_white)
levelinfo = ds_list_create();
scheduler_resolution_set(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// moving camera, resetting stuff
// camera movement
if mouse_check_button_pressed(mb_middle)
{
    mstartx = mouse_x
    mstarty = mouse_y
}
if mouse_check_button(mb_middle)
{
    view_xview[0]+=(mstartx - mouse_x)
    view_yview[0]+=(mstarty - mouse_y)
}
//wasd movement
view_xview[0]+=( keyboard_check(ord("D")) - keyboard_check(ord("A")) )*4
view_yview[0]+=( keyboard_check(ord("S")) - keyboard_check(ord("W")) )*4
//resize current selected item
if keyboard_check_pressed(ord("R"))
{
    sx=1
    sy=1
}
if keyboard_check_pressed(ord("T"))
{
    view_xview[0] = 0
    view_yview[0] = 0
    view_wview[0] = window_get_width()
    view_hview[0] = window_get_height()
}
// scroll thru list
if mouse_wheel_up()
    so+=1
if mouse_wheel_down()
    so-=1
so = clamp(so,0,array_length_1d(objlist)-1)
if view_wport[0] != window_get_width() or view_hport[0] != window_get_height()
    event_user(0)
if selected != noone
{
    if !keyboard_check(vk_control)
    {
        selected.image_xscale += (keyboard_check_released(vk_right)-keyboard_check_released(vk_left))/2
        selected.image_yscale += (keyboard_check_released(vk_down)-keyboard_check_released(vk_up))/2
    }
    else
    {
        selected.x += (keyboard_check_released(vk_right)-keyboard_check_released(vk_left))*16
        selected.y += (keyboard_check_released(vk_down)-keyboard_check_released(vk_up))*16
        selected.x = clamp(selected.x,0,room_width-1)
        selected.y = clamp(selected.y,0,room_height-1)
    }
}
else
{
    sx += (keyboard_check_released(vk_right)-keyboard_check_released(vk_left))/2
    sy += (keyboard_check_released(vk_down)-keyboard_check_released(vk_up))/2
}
// zoom
if keyboard_check(ord("E"))
{
    view_wview[0] -= 20*(view_wport[0]/view_hport[0]);
    view_hview[0] -= 20;
    view_xview[0] += 10*(view_wport[0]/view_hport[0])
    view_yview[0] += 10
}
if keyboard_check(ord("Q"))
{
    view_wview[0] += 20*(view_wport[0]/view_hport[0]);
    view_hview[0] += 20;
    view_xview[0] -= 10*(view_wport[0]/view_hport[0])
    view_yview[0] -= 10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var objtodel = instance_position( mouse_x, mouse_y, all )
if objtodel != noone
{
    instance_destroy(objtodel)
}
selected = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// put object
if instance_position( mouse_x, mouse_y, all ) == selected and selected != noone
{
    selected = noone
    exit
}
selected = instance_position( mouse_x, mouse_y, all )
if selected != noone
{
    //selx = floor(selected.x/32)*32
    //sely = floor(selected.y/32)*32
    exit
}
if instance_count-1 &gt;= maxobj
{
    show_message("woah. that. is a bit too much.")
    exit
}
if (not (mouse_x &lt; 0 or mouse_y &lt; 0)) and (not (mouse_x &gt; room_width-1 or mouse_y &gt; room_height-1))
{
    with instance_create(floor(mouse_x/32)*32,floor(mouse_y/32)*32,objlist[so])
    {
        other.selected = self.id
        image_xscale = other.sx
        image_yscale = other.sy 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rescale
var w = window_get_width(); var h = window_get_height();
display_set_gui_size(w, h);
view_wport[0] = w
view_hport[0] = h
view_wview[0] = view_wport[0]
view_hview[0] = view_hport[0]
surface_resize(application_surface, w, h);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw selected object names
draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_set_alpha(0.25)
draw_rectangle_color(0,0,view_wport[0],20,c_black,c_black,c_black,c_black,false)
draw_rectangle_color(0,view_hport[0]-20,view_wport[0],view_hport[0],c_black,c_black,c_black,c_black,false)
draw_set_alpha(1)
// top bar info (object and mx my)
draw_text(8,8,object_get_name(objlist[so]))
draw_set_halign(fa_right)
draw_text(view_wport[0]-8,8,string(mouse_x)+" "+string(mouse_y))
// bottom bar info (level info)
draw_set_halign(fa_left)
draw_text(8,view_hport[0]-12,levelname+" (by "+levelauthor+") "+string(instance_count-1)+"/"+string(maxobj)+" objects")
draw_set_halign(fa_right)
draw_text(view_wport[0]-8,view_hport[0]-12,string(room_width)+"x"+string(room_height))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw obj at mouse, room borders
draw_sprite_ext(object_get_sprite(objlist[so]),-1,floor(mouse_x/32)*32,floor(mouse_y/32)*32,sx,sy,0,c_white,0.5)
draw_set_alpha(1)
draw_rectangle_color(0,0,room_width-1,room_height-1,c_white,c_white,c_white,c_white,true)
if selected != noone
{
    //draw_rectangle_color(selected.x-selected.bbox_left,selected.y-selected.bbox_top,selected.x+selected.bbox_right,selected.y+selected.bbox_bottom,c_red,c_red,c_red,c_red,true)
    draw_rectangle_color(selected.bbox_left,selected.bbox_top,selected.bbox_right,selected.bbox_bottom,c_red,c_red,c_red,c_red,true)
}
/*
if window_get_width() != view_wview[0]
{
    view_wview[0] = window_get_width()
    view_wport[0] = window_get_width()
    display_set_gui_size(window_get_width(), window_get_height());
}
if window_get_height() != view_hview[0]
{
    view_hview[0] = window_get_height()
    view_hport[0] = window_get_height()
    display_set_gui_size(window_get_width(), window_get_height());
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// fullscreen toiggle thing FUck
window_set_fullscreen(!window_get_fullscreen());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// change level name
instance_create(0,0,obj_settingselect)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// credits
show_message("PickleMaker v"+GM_version+"#A Level Editor for Crazy Pickle#Made by#cache99 - coding#penoPleno - background")
show_message("How To Use##F1 - Save level#F2 - Load level for editing#F4 - this thing#F5 - Open the Setting Select#Q, E - Zoom#WASD or Middle mouse button - move camera#Arrow keys - resize item or selected object#Arrow keys + ctrl with object selected - move object#R - Reset size (doesnt work with selected)#T - Reset view#Right mouse button - remove object#Left mouse button - place object#Mouse wheel - change object")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// load level for editing
show_debug_message("loading")
filename = get_string("Level filename (without .crzpkl.ini)","")+".crzpkl.ini"
if filename == ".crzpkl.ini"
    exit
ini_open(filename)
result = ini_read_string("data","data","")
if result == ""
{
    show_message("Level doesnt exist or invalid")
}
levelinfo = ds_list_create()
ds_list_read(levelinfo,result)
levelname = ini_read_string("info","name","level")
levelauthor = ini_read_string("info","author","unknown")
levelx = ini_read_real("info","x",1280)
levely = ini_read_real("info","y",960)
ini_close()
room_width = levelx
room_height = levely
show_debug_message("and now for the chaser")
// remove useless
with obj_solid
    instance_destroy()
with obj_tickleablesolid
    instance_destroy()
with obj_player
    instance_destroy()
with obj_baddie
    instance_destroy()
with obj_onewaywall
    instance_destroy()
with obj_slope
    instance_destroy()
    
for (var i = 0; i &lt; ds_list_size(levelinfo); i++;)
{
    object = ds_list_find_value(levelinfo,i);
    show_debug_message(object)
    if object[2] != "obj_null"
    {
        obj = instance_create(real(object[0]),real(object[1]),asset_get_index(object[2]))
        with obj
        {
            image_xscale = real(other.object[3])
            image_yscale = real(other.object[4])
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// save level
levelinfo = ds_list_create();
ini_open(string_replace_all(levelname," ","_")+".crzpkl.ini");
ini_write_string("info", "name", levelname);
ini_write_real("info", "x", room_width);
ini_write_real("info", "y", room_height);
ini_write_string("info", "author", levelauthor)
for (var i = 0; i &lt; instance_count; i++;)
{
    object = instance_find(all,i);
    if object_get_name(object.object_index) != "obj_editor"
    {
        temparray = array_create(5)
        temparray[0] = object.x
        temparray[1] = object.y
        temparray[2] = object_get_name(object.object_index)
        temparray[3] = object.image_xscale
        temparray[4] = object.image_yscale
        show_debug_message(temparray)
        ds_list_add(levelinfo,temparray)
    }
}
show_debug_message(ds_list_write(levelinfo))
show_debug_message(json_encode(levelinfo))
ini_write_string("data","data",ds_list_write(levelinfo))
show_message("Saved as " + string_replace_all(levelname," ","_") + ".crzpkl.ini")
ini_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
